<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.vacation.mapper.VacationMapper">

	<resultMap type="com.spring.vacation.domain.VacationVO" id="selectMonthInfo">
		<id property="vacationAppNum" column="vacationAppNum"/>
		<result property="id" column="id"/>
		<result property="type" column="type"/>
      	<result property="startterm" column="startterm"/>
      	<result property="endterm" column="endterm"/>
		<result property="term" column="term"/>
		<result property="state" column="state"/>
		<result property="applicationDate" column="applicationDate"/>
		<result property="approvalDate" column="approvalDate"/>
		<result property="reason" column="reason"/>
		<result property="refusalReason" column="refusalReason"/>
		<collection property="vacationApplication" resultMap="userMap"/>
	</resultMap>

	<resultMap type="com.spring.vacation.domain.VacationApplicationVO" id="userMap">	
		<result property="name" column="name"/>
	</resultMap>
	
	<!-- 월에 따라 분류해 정보를 가져옴 -->
	<select  id="vSelectMonth" resultMap="selectMonthInfo">
	<![CDATA[
	
	select *
from (select /*+INDEX_DESC(vacationApplicationTable vactionAppNum)*/ 
            rownum rn,vat.vacationAppNum,vat.id,hs.name,vat.type,vat.startterm,vat.endterm,vat.term,vat.state,vat.applicationDate,vat.approvalDate,vat.reason
		from vacationApplicationTable vat join vacationScedule hs on  vat.id=hs.id  
        where 
       	]]>	
	<include refid="vacationCriteria"></include>
	<![CDATA[
	
		vat.state not in('신청') and rownum <=(#{pageNum})*#{amount} and vat.startterm >= #{nowMonth} and vat.startterm < #{nextMonth}
		)
		where rn>(#{pageNum}-1)*#{amount}  
		
    ]]>	
	</select>
	
	<!-- 월에 따라 가져오는 정보를 다르게 해서  총 계수를 가져옴-페이지 넘기기에서 사용 -->
	<select id="vTotalCnt" resultType="int">
	<![CDATA[
		select count(*) from vacationApplicationTable vat
		where
		]]>	
	<include refid="vacationCriteria"></include>
	<![CDATA[
		vacationAppNum>0 and state not like ('신청')and rownum <=(#{pageNum})*#{amount} and vat.startterm >= #{nowMonth} and vat.startterm < #{nextMonth}
		]]>	
	</select>
	
	
	<!-- type이 '신청'인 신청서 갯수 추출  -->
	<select  id="vCountApp" resultType="int">
		select count(*)
		from vacationApplicationTable vat, vacationScedule vs
		where vat.id=vs.id and vat.state like ('신청')
	</select>
	<!-- type이 '신청'인 리스트만 조회 -->
	<select id="vApplicationList" resultMap="selectMonthInfo">
		select vat.vacationAppNum,vat.id,vs.name,vat.type,vat.startterm,vat.endterm,vat.term,vat.reason,vat.state
		from vacationApplicationTable vat, vacationScedule vs
		where vat.id=vs.id and vat.state like ('신청')
		order by vacationAppNum
	</select>
	<!-- 휴가신청 승인해주기 -->
	<!-- 승인-->
	<update id="vOk">
		update vacationApplicationTable 
		set approvalDate=sysdate, state='승인'  
		where vacationAppNum=#{vacationAppNum}
	</update>

	<!-- 거절 -->
	<update id="vNo">
		update vacationApplicationTable 
		set approvalDate=sysdate, state='거절',refusalreason=#{refusalreason}   
		where vacationAppNum=#{vacationAppNum}
	</update>

	<!-- 승인,거절,반납  변동사항 생기는 경우! -->
	<update id="vChangeCnt">
		update vacationScedule set vacationcnt=vacationcnt+#{vcnt} where id=#{id}
	</update>

	<!-- 사용자 -->
		<!-- 신청서 등록 구문 -->
	<insert id="vInsertUserApp">
	
		insert into vacationApplicationTable(vacationAppNum,id,type,startterm,endterm,term,state,applicationDate,reason) 
		values(vacationAppNum_SEQ.nextval,#{id},#{type},#{startterm},#{endterm},#{term},'신청',sysdate,#{reason})
		
	</insert>
	<!--사용자 기간확인하는 구문-->
	<select id="vShowUserTerm" resultType="com.spring.vacation.domain.VacationVO">
<![CDATA[
		select startterm,endterm
		from vacationApplicationTable 
 		where id=#{id}  and (state like '승인' or state like '신청')
 		order by applicationDate
	]]>
	</select >
	
	
	<!--사용자 페이지 보여주는 구문-->
	<select id="vShowUser" resultType="com.spring.vacation.domain.VacationVO">
<![CDATA[
		select vacationAppNum,id,type,startterm,endterm,term,state,applicationDate,approvaldate
		from vacationApplicationTable 
 		where id=#{id} and startterm >= #{cri.nowMonth} and startterm < #{cri.nextMonth}
 		order by applicationDate
	]]>
	</select >
	<select id="vShowUserOne" resultMap="selectMonthInfo">

		select vat.vacationAppNum,vat.id,hs.name,vat.type,vat.startterm,vat.endterm,vat.term,vat.state,vat.applicationDate,vat.approvalDate,vat.reason,vat.refusalReason
		from vacationApplicationTable vat join vacationScedule hs on  vat.id=hs.id
		where vat.vacationAppNum=#{vacationAppNum}
	</select>
	<!-- 수정하는 구문 -->
	<update id="vUserUpdateApp" >
		update vacationApplicationTable 
		set applicationDate=sysdate,reason=#{reason}
		where vacationAppNum=#{vacationAppNum}
	</update>
	<!-- 삭제하는 구문 -->
	<delete id="vDeleteUserApp">
		delete from vacationApplicationTable
		where vacationAppNum=#{vacationAppNum}
	</delete>
	<!-- 휴가 반납 : 승인된 휴가 중에서  cnt필요함-->
	<update id="vCancleVacation">
		update vacationApplicationTable 
		set approvalDate=sysdate, state='반납'  
		where vacationAppNum=#{vacationAppNum}
	</update>
	<!-- 휴가 개수를 불러오는 구문 -->
	<select id="vIdCnt" resultType="int">
		select VacationCnt from vacationScedule where id=#{id}
	</select>	
	
	<!-- 현재 월 불러오는 mapper?? -->
	<select id="vVacationDay" resultType="Date" >
		select startterm 
		from vacationApplicationTable 
		where vacationAppNum=#{vacationAppNum}
	</select>
	
	<!-- 검색 조건에 따라 검색 하기 -->
	<!-- 동적 SQL  -->
	<sql id="vacationCriteria">
		<trim prefix="(" suffix=") AND" prefixOverrides="OR">
			<foreach collection="typeArr" item='keyType'>
				<trim prefix="OR">
					<choose>
						<when test="keyType=='I'.toString()"><!-- 사원 아이디로 검색 -->
							vat.id like '%'||#{keyword}||'%'
						</when>
						<when test="keyType=='T'.toString()"><!-- 휴가 종류로 검색로 검색 -->
							vat.type like '%'||#{keyword}||'%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>
</mapper>






